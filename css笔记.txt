id选择器只能被引用一次，如调用多次需：
#XXX p {  }
#XXX h2{  }

类选择器：
.xxx { } 
p.xxx { }            #除了p，其他不能引用该class

属性选择器：
[title]{ }           #只要含有属性title，无论值为何都可调用
[title~=hello]{ }    #值只要部分含有hello的都调用
[lang|=en] { }       #lang属性等于e或以en-开头的整个单词。img[src|="/i/figure"] figure-1/2
[abc^="def"]         #选择 abc 属性值以 "def" 开头的所有元素
[abc$="def"]         #选择 abc 属性值以 "def" 结尾的所有元素
[abc*="def"]         #选择 abc 属性值中包含子串 "def" 的所有元素

后代选择器：
h1 em {   }          #无视em嵌套深度
子元素选择器:
h1 > strong {   }    #1层嵌套
相邻兄弟选择器：
h1 + p {   }         #同父级
li + li{   }         #从第2个li生效

伪类：（要先声明DOTYPE）
selector:pseudo-class{property:value}
input:focus{}        #输入焦点
:first-child{}       #只有第1个项生效
:lang(no)            #当lang="no"时调用

伪元素：
:first-line          #文本首行
:first-letter        #文本首字母
font-size:xx/x-large   #字体变大
:before/after{content:url()}#元素前后插入新内容图片

插入外部样式表：
<head>
<link rel="stylesheet" type="text/css" href="mystyle.css" />
</head>
内部样式表：
<head>
<style type="text/css">
  hr {color: sienna;}
  p {margin-left: 20px;}
  body {background-image: url("images/back40.gif");}
</style>
</head>

内联样式：                                     #只使用一次
<p style="color: sienna; margin-left: 20px">
This is a paragraph
</p>
多重样式会继承外部样式里内部没有的样式，相同样式按内部样式优先。

{background-image: url(' ');}                  #背景图像 
background-repeat: repeat-y/repeat-x/no-repeat;#平铺
background-attachment:fixed;                   #图像不会随页面滚动
background-position: 50px 10px/30% 50%/center; #定位
background: #ff0000 url() no-repeat fixed center; #简写
text-indent: 5em;                              #文本缩进，em是字体高
word-spacing:    ;                             #单词间隔
letter-spacing:   ;                            #字母间隔
{text-transform:none/uppercase/lowercase/capitalize} #字符转换：大写/小写/首字母大写
{text-decoration:none/underline/overline/line-through/blink}#文本装饰，下划/上划/删除线/闪
white-space:normal/pre/nowrap/pre-wrap/pre-line#处理空白符，默认/承认格式/禁止换行/自动换行
    pre-line:合并空白符，可换行，自动换行
    normal:合并空白符，不可换行，自动换行
    nowrap:合并空白符，不可换行，禁止自动换行
    pre:不合并空白符，可换行，禁止自动换行
    pre-wrap:不合并空白符，可换行，自动换行
候选字体类型：                                 #带空格的加引号
p{font-family: Times, TimesNR, 'New Century Schoolbook', Georgia, 'New York', serif;}
font-style:normal/italic/oblique;              #字体风格：正常/斜体/倾斜
font-variant:small-caps                        #字体变形:小型大写字母
font-weight:bold/100~900                       #字体粗细：加粗/9级粗度
font-size: 1em/16px/100%/xx-large
font:italic bold 12px大小/30px行高 arial,sans-serif;   #简写

链接样式：（注意顺序）
a:link{     }  #未访问的链接
a:visited{  }  #已访问的链接
a:hover{    }  #鼠标移到链接上
a:active{   }  #点击链接
a.xxx:link{ }  #多个链接可加class

display:block  #用于将<a><span>定义为块级元素，从而调用宽高

列表样式:
{list-style-type:circle/square/upper-roman/lower-alpha} #圆孔/方块/罗马/字母
{list-style-image:url( )}                      #图像作为列表标记
{list-style-position:inside}                   #列表往右边缩进
{list-style : url() square inside}             #简写

表格样式：
table-layout:auto/fixed                        #表格布局
border:1px solid 颜色/thin/thick               #边框颜色
border-collapse:collapse/separate；            #单/双线边框
vertical-align:bottom/top/center               #垂直对齐
border-spacing: px  px                         #表格内外边框间距
caption-side:bottom/top/left/right             #表格标题方向
empty-cells:hide                               #隐藏空格边框
border :颜色 dotted/solid thick/thin/medium    #边框线(简写)
outline:颜色 dotted/solid thick/thin/medium    #轮廓线(简写)
    outline-style:dotted/solid/dashed/double   #轮廓线样式
    outline-color:#                            #轮廓线颜色
    outline-width:thin/thick/ px               #轮廓线宽度
padding: px em ex % ;                          #内边距(上,右,下,左。只2组就是上下，左右）
padding-top/right/bottom/left： px/em/ex/ %    #单边内边距（%相对于父元素width）
border-style: solid dotted dashed double       #实线上边框，点右，虚下，双左

定位：
position:relative;left: px;                    #相对定位偏移，+右-左
position:absolute;left: px;top: px             #绝对定位偏移（跟着附近position元素走）
position:fixed;                                #固定定位（滚动IE不变）
overflow:scroll/hidden/auto                    #滚动条显示溢出(指定宽高)/隐藏溢出/自动处理
img{clip:rect(px px px px)}                    #裁剪矩形（顺时针）用于裁剪绝对定位元素
vertical-align:text-top/bottom                 #垂直排列
z-index:-1/1                                   #-1被堆叠,1堆叠（绝对和固定定位才重叠）

浮动：
clear:both                                     #左右不允许出现浮动框
float:right                                    #向右浮动
li{display:inline}                             #列表横向排列

margin:auto                                    #居中
游览器兼容：
body{margin:0;padding:0;}                      #IE8以前会有外边距
<!DOCTYOE html>                                #使用float必须声明

max/min-height:                                #最大最小高度
max/min-width:                                 #最大最小宽度
line-height:                                   #行高
display:inline/block                           #不换行/换行
display:none/visibility:hidden                 #隐藏（彻底消失/保留空间）
visibility:collapse                            #用于表格的隐藏
style="cursor: "                               #光标变形
div.img img                                    #divclassimg下的img
opacity:1                                      #透明度1
filter:alpha(opacity=100)                      #透明度1(用于IE8前）

CSS布局
* {
  -webkit-box-sizing: border-box;               谷歌内核识别码
     -moz-box-sizing: border-box;               火狐内核识别码
          box-sizing: border-box;
}
容器上加清除浮动防止浮动溢出 overflow:auto;
容器相对定位，里面绝对定位
块加清除浮动，可以在浮动元素下方显示 clear:left;
比浮动简单的网格布局 display=inline-block;
column-count:3;                                 分列数（要加前缀识别码）
column-gap:1em;                                 列之间的间隙（要加前缀）
伸缩盒布局：(-webkit-仅用于谷歌)
  容器加 display:flex;
  子元素 flex:initial;                          伸缩范围（min-width~width)
         flex:none;                             固定范围
         flex:1;                                剩余范围的1/3
         flex:2;                                剩余范围的2/3

border-radius；5px                              圆角

----------
```
div{
counter-reset: section; /*盒子创建计数器*/
}
h4:before{
content:"aaa" counter(section)".";  /*显示"aaa."*/
counter-increment: section;} /*计数*/```
鼠标悬停出现[]特效
```
a {  
position: relative;  
display: inline-block;  //设了行级块就不乱跑了
outline: none;  
text-decoration: none;   //删掉下划线
color: #000; 
}  //链接默认蓝色
a:hover::before, a:hover::after { position: absolute; }//重点  
a:hover::before { content: "\5B"; left: -20px; }  
a:hover::after { content: "\5D"; right:  -20px; }  ```